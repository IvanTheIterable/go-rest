// Code generated by MockGen. DO NOT EDIT.
// Source: example/repository (interfaces: MessageRepo)

// Package mock_repository is a generated GoMock package.
package mock_repository

import (
	model "example/model"
	reflect "reflect"

	gin "github.com/gin-gonic/gin"
	gomock "github.com/golang/mock/gomock"
)

// MockMessageRepo is a mock of MessageRepo interface.
type MockMessageRepo struct {
	ctrl     *gomock.Controller
	recorder *MockMessageRepoMockRecorder
}

// MockMessageRepoMockRecorder is the mock recorder for MockMessageRepo.
type MockMessageRepoMockRecorder struct {
	mock *MockMessageRepo
}

// NewMockMessageRepo creates a new mock instance.
func NewMockMessageRepo(ctrl *gomock.Controller) *MockMessageRepo {
	mock := &MockMessageRepo{ctrl: ctrl}
	mock.recorder = &MockMessageRepoMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockMessageRepo) EXPECT() *MockMessageRepoMockRecorder {
	return m.recorder
}

// GetMessageById mocks base method.
func (m *MockMessageRepo) GetMessageById(arg0 *gin.Context) (model.Message, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetMessageById", arg0)
	ret0, _ := ret[0].(model.Message)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetMessageById indicates an expected call of GetMessageById.
func (mr *MockMessageRepoMockRecorder) GetMessageById(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetMessageById", reflect.TypeOf((*MockMessageRepo)(nil).GetMessageById), arg0)
}
